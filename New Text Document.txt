@model Alumni_Student_Portal.Models.Complain

@{
    ViewBag.Title = "Query";
}
<style>
    .insidebox {
        border: 1px solid black;
        margin: 10% auto 10% auto;
        max-width: 500px;
        min-width: 200px;
        padding-left: 60px;
        padding-right: 60px;
        border-radius: 10px;
        background-color: whitesmoke;
    }

    div h1 {
        text-align: center;
    }

    p#para {
        text-align: center;
        font-size: 14px;
    }
</style>




<body style="background-image:url('../Content/images/abstract-art-artistic-background-1103970.jpg')">



    @using (Html.BeginForm("Query", "Alumni", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        @Html.ValidationSummary(true)
        @Html.AntiForgeryToken()
        @* This AntiForgeryTokey is used for prevent CSRF Attack*@
        <fieldset>



            <div class="editor-label">
                @Html.LabelFor(model => model.Name)
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.Name)
                @*@Html.ValidationMessageFor(model => model.Name)*@
            </div>
            <span style="color:red">   @Html.ValidationMessageFor(x => x.Name) </span>

            <div class="editor-label">
                @Html.LabelFor(model => model.Emain)
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.Emain)
                @Html.ValidationMessageFor(model => model.Emain)
            </div>

            <div class="editor-label">
                @Html.LabelFor(model => model.Discription)
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.Discription)
                @Html.ValidationMessageFor(model => model.Discription)
            </div>
            <div class="editor-label">
                Select CV
            </div>
            @*<div class="editor-field">
                    <input type="file" name="file" />
                    @Html.ValidationMessageFor(model => model.com)
                </div>*@


            <div class="form-group">
                <div class="input-group">
                    <div class="input-group-addon"><span class="glyphicon glyphicon-user"></span></div>

                    <input type="file" name="file" id="file" class="form-control" required="required" />
                    @Html.ValidationMessageFor(model => model.com)


                </div>


            </div>



            <div class="form-group">

                <input type="submit" value="Add" class="btn btn-success btn-block" />

            </div>

            <div class="form-group">
                <p style="color:red">@ViewBag.error</p>
            </div>

            <div>
                @if (ViewBag.Message != null)
                {
                    <span style="color:green">
                        @ViewBag.Message
                    </span>
                }
            </div>









        </fieldset>
    }
</body>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}